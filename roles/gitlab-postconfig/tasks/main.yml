---
- name: GitLab Post | Install pip
  yum:
    name: python-pip
    state: present

- name: GitLab Post | Install pyapi-gitlab
  pip:
    name: pyapi-gitlab

- name: GitLab Post | Repos to create
  debug: msg="https://gitlab.{{ dns_domain_name }}/{{ user_prefix }}{{ item }}/ansible-playbooks"
  with_sequence: count="{{ user_count }}"

#- name: GitLab Post | Set root user password
#  shell: >
#    echo "user = User.where(id: 1).first
#    user.password = '{{ domain_admin_password }}'
#    user.password_confirmation = '{{ domain_admin_password }}'
#    user.password_automatically_set = false
#    user.reset_password_token = nil
#    user.reset_password_sent_at = nil
#    user.save!
#    user.unlock_access!
#    quit
#    " | gitlab-rails console production

- name: GitLab Post | copy root password script to host
  template:
    src: set_root_pw.sh.j2
    dest: /root/set_root_pw.sh
    owner: root
    group: root
    mode: 0700

- name: GitLab Post | Execute set root password
  command: ./set_root_pw.sh
  args:
    chdir: /root

- name: GitLab Post | Remove set root password script
  file:
    path: /root/set_root_pw.sh
    state: absent

- name: sleep 2 minute to allow root to initialize after password set
  pause:
    minutes: 2

### Gitlab workaround
### Users are not populated from AD until login from Web UI
### I haven't found an automated workaround...

- name: GitLab Post | Create local users
  gitlab_user:
    server_url: https://gitlab.{{ dns_domain_name }}
    validate_certs: False
    login_user: root
    login_password: "{{ domain_admin_password }}"
    name: "{{ user_prefix }}{{ item }}"
    username: "{{ user_prefix }}{{ item }}"
    password: "{{ users_password }}"
    email: "{{ user_prefix }}{{ item }}@{{ dns_domain_name }}"
    confirm: False
    state: present
  with_sequence: count="{{ user_count }}"

- name: GitLab Post | Create Projects in GitLab
  gitlab_project:
    server_url: https://gitlab.{{ dns_domain_name }}
    validate_certs: False
    login_user: root
    login_password: "{{ domain_admin_password }}"
    name: "{{ user_prefix }}{{ item }}"
    group: "{{ user_prefix }}{{ item }}"
    issues_enabled: False
    wiki_enabled: False
    snippets_enabled: False
    state: present
  with_sequence: count="{{ user_count }}"
  ignore_errors: true
